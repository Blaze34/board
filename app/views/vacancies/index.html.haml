- model_class = Vacancy
.page-header
  - if can? :new, Vacancy
    = link_to t('.new', default: t('helpers.links.new')), new_vacancy_path, class: 'btn btn-primary pull-right'
  %h1=t '.title', default: model_class.model_name.human.pluralize.titleize

= search_form_for @search, class: 'form-search' do |f|
  = f.text_field :name_cont, placeholder: :name_contains
  = f.text_field :salary_gteq, placeholder: :salary_more_that

  %button.btn= t('buttons.search')

= paginate @vacancies

%table.table.table-striped
  %thead
    %tr
      %th= sort_link(@search, :name, {})
      %th= sort_link(@search, :salary, {})
      %th= sort_link(@search, :employment, {})
      %th= sort_link(@search, :expire_at, {})
      %th= model_class.human_attribute_name(:required_skill_list)
      %th= sort_link(@search, :created_at, {})
      %th=t '.actions', :default => t('helpers.actions')
  %tbody
    - @vacancies.each do |vacancy|
      %tr
        %td= link_to vacancy.name, vacancy_path(vacancy)
        %td= vacancy.salary
        %td= vacancy.employment
        %td= l vacancy.expire_at, format: :date
        %td= vacancy.cached_skill_list
        %td= l vacancy.created_at, format: :datetime
        %td
          - if can? :edit, vacancy
            = link_to t('.edit', default: t('helpers.links.edit')), edit_vacancy_path(vacancy), class: 'btn btn-mini'
          - if can? :destroy, vacancy
            = link_to t('.destroy', default: t('helpers.links.destroy')), vacancy_path(vacancy), method: :delete, data: { confirm: t('.confirm', default: t('helpers.links.confirm', default: 'Are you sure?')) }, class: 'btn btn-mini btn-danger'

= paginate @vacancies